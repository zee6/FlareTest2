<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="4" MadCap:lastHeight="4852" MadCap:lastWidth="2067">
    <head>
        <link href="../Resources/Stylesheets/Collab_Srvr_Concise_Setup_CSS.css" rel="stylesheet" type="text/css" />
        <meta name="description" content="The information on this page assumes you have already read unblu Server i18n Configuration. Dynamic Reconfiguration. Using Multiple Localized Text Files. Scope-Specific Localized Texts. Example XML Configuration File." />
    </head>
    <body>
        <h1>Advanced unblu Server i18n Configuration</h1>
        <p>The information on this page assumes you have already read <a href="unblu Server i18n Configuration.htm">unblu Server i18n Configuration</a>.</p>
        <p>In addition to the standard localized text settings mechanisms described in <a href="unblu Server i18n Configuration.htm">Unblu Server i18n Configuration</a>, unblu has a set of additional localized text settings features that allow for more complex and dynamic setups.</p>
        <h2>Dynamic Reconfiguration</h2>
        <p>The unblu server has the ability to dynamically reload configurations while the server is running.</p>
        <p>Dynamic reconfiguration must be triggered explicitly by calling the /sys-unblu/rest/propertyCascade/reload rest service. If your server is running on localhost on port 8080, you need to request http://localhost:8080/sys-unblu/rest/propertyCascade/reload to trigger dynamic reconfiguration.</p>
        <p><span class="Bolder">CAUTION:</span> Make sure the /sys-unblu path is properly protected. (See <a href="../Spare Topics/System Entry Path Concept.htm#Security">Security Considerations</a>.)</p>
        <p>Dynamic reconfiguration also works for configuration settings. (See <a href="unblu Server Configuration.htm">Unblu Server Configuration</a> and <a href="Advanced Unblu Server Configuration.htm">Advanced Unblu Server Configuration</a>.)</p>
        <h2>Using Multiple Localized Text Files</h2>
        <p>Instead of using a single localized text file, it is also possible to split localized text across multiple files. Multiple localized text files are specified using a coma separated list of file path or urls in the "com.unblu.textoverlay" configuration setting instead of a single value. (See <a href="unblu Server i18n Configuration.htm#Using">Using Localized Text Configuration Files</a>.)</p><pre xml:space="preserve" class="prettyprint"># example for using multiple i18n properties files (extract from a configuration properties file)
com.unblu.textoverlay=http://configurationserver/unblu/unblu-text.properties,/etc/unblu/unblu-text.properties"</pre>
        <p>This example specifies two localized text files:<code> http://configurationserver/unblu/unblu-text.com</code> and <code>/opt/unblu/unblu-text.properties</code>.</p>
        <p>When using multiple localized text files, the ones that are defined later will always take precedence over the ones defined earlier.</p>
        <p>In the example above this means that properties defined in <code>/opt/unblu/unblu-text.properties</code> will take precedence over properties defined in <code>http://configurationserver/unblu/unblu-text.properties</code>.</p>
        <p>Using multiple localized text files can make sense, for instance, in an unblu cluster where servers share some, but not all, of the settings. A second scenario for using multiple localized text files is when there are multiple environments (i.e. prod, stage, development) that share most of the localized text settings but still need some individual configuration.</p>
        <h2>Scope-Specific Localized Texts</h2>
        <p>Usually, localized properties are global to the unblu server, this means that a localized text property is always applied.</p>
        <p>In addition to global configuration properties, unblu also provides a number of other scopes for localized text properties. Scoped localized text properties are only applied in a certain context, i.e., for a specific user or for a specific domain.</p>
        <p>Scope-specific configuration is only supported if xml files (see <MadCap:xref href="#XML">XML Localized Text Files</MadCap:xref> below) are used (instead of Java properties files).</p>
        <p>The available configuration scopes are described below.</p>
        <h2>Global Scope</h2>
        <p>The global scope is the default scope. If you use properties files for configuration, the scope is always global. Globally-scoped properties are effective for the whole unblu server.</p>
        <h2>Domain Scope</h2>
        <p>The domain scope is defined by the origin (schema + fully qualified domain) of the (web-) page the user is currently visiting. If an unblu installation is shared across multiple domains (i.e. http://trading.bank.com and http://www.bank.com), then domain-scoped configuration can be used to apply individual configuration settings for the "trading" and the "www" part of the site.</p>
        <h2>User Scope</h2>
        <p>The user scope is defined by the currently executing authenticated user. Using user-scoped configuration settings, you can specify individual configuration for users.</p>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot><a name="XML"></a>XML Localized Text Files</MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody>
                <p>In addition to Java properties files, unblu also supports an xml-based localized text file format. Certain localized text features (such as scope-specific localized text, see above) are only supported in the xml-based format.</p>
                <p>The xml-based format has the following general format:</p><pre class="prettyprint">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;!-- this is a generic example of an unblu xml localized text file... SECTION1 and SECTION2 must be replaced by valid section elements (global, domain or user)
 &lt;localizedText&gt;
    &lt;SECTION1&gt;
        &lt;property key="key1.en"&gt;value 1 english&lt;/property&gt;
        &lt;property key="key1.de"&gt;value 1 german&lt;/property&gt;
        &lt;property key="key2.en"&gt;value 2 english&lt;/property&gt;
        &lt;property key="key2.de"&gt;value 2 german&lt;/property&gt;
    &lt;/SECTION1&gt;
     
    &lt;SECTION2&gt;
        &lt;property key="key1.en"&gt;value 1 english&lt;/property&gt;
        &lt;property key="key1.de"&gt;value 1 german&lt;/property&gt;
        &lt;property key="key2.en"&gt;value 2 english&lt;/property&gt;
        &lt;property key="key2.de"&gt;value 2 german&lt;/property&gt;
    &lt;/SECTION2&gt;
 &lt;/localizedText&gt;</pre>
                <p>The xml file must be a valid xml file starting with a <code>&lt;?xml version="1.0" encoding="&lt;character-encoding&gt;"?&gt;</code> line. We recommend using UTF-8 (like the sample above) but all other character encodings supported by the Java virtual machine in use are also supported.</p>
                <p>The document element MUST be named "localizedText".</p>
                <p>The document element can contain any number of sections where every section must be a valid section, as described below, and must be unique within the file.</p>
                <p>Every section can contain any number of property elements but MUST NOT contain more than one property element using the same key.</p>
                <p>Every property element MUST define a "key" attribute.</p>
                <p>The value of the property is the text content of the property element.</p>
                <p>Section elements must conform with one of the section types described below.</p>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot>Section Type Global</MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody>
                <p>The "global" section type defines properties that are valid globally (for the whole unblu server).</p><pre class="prettyprint">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;!-- example of an xml localized text file with a global section --&gt;
&lt;localizedText&gt;
    &lt;global&gt;
        &lt;property key="key1.en"&gt;value 1 english&lt;/property&gt;
        &lt;property key="key1.de"&gt;value 1 german&lt;/property&gt;
        &lt;property key="key2.en"&gt;value 2 english&lt;/property&gt;
        &lt;property key="key2.de"&gt;value 2 german&lt;/property&gt;
    &lt;/global&gt;
&lt;/localizedText&gt;</pre>
                <p>The "global" section type does not have any attributes and MUST not be declared more than once in a localized text file.</p>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot>Section Type Domain</MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody>
                <p>The "domain" section type defines properties that are valid for a certain domain (fully-qualified domain with protocol, <code>&lt;protocol&gt;://&lt;fqdn&gt;:&lt;optionalport&gt;</code>, i.e. <a href="http://www.unblu.com/">http://www.unblu.com</a>)</p><pre class="prettyprint">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;!-- example of an xml localized text file with a domain section --&gt;
&lt;localizedText&gt;
    &lt;domain origin="http://www.unblu.com"&gt;
        &lt;property key="key1.en"&gt;value 1 english&lt;/property&gt;
        &lt;property key="key1.de"&gt;value 1 german&lt;/property&gt;
        &lt;property key="key2.en"&gt;value 2 english&lt;/property&gt;
        &lt;property key="key2.de"&gt;value 2 german&lt;/property&gt;
    &lt;/domain&gt;
&lt;/localizedText&gt;</pre>
                <p>The "domain" section type MUST declare an "origin" attribute holding the origin of the domain (fully-qualified domain with protocol, no path, no trailing slash, i.e. http://www.unblu.com).</p>
                <p>A localized text file MUST NOT contain more than one domain section with the same "origin" attribute.</p>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot>Section Type User</MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody>
                <p>The "user" section type defines properties that are valid for a certain authenticated user.</p><pre class="prettyprint">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;!-- example of an xml localized text file with a user section --&gt;
&lt;localizedText&gt;
    &lt;user id="123456"&gt;
        &lt;property key="key1.en"&gt;value 1 english&lt;/property&gt;
        &lt;property key="key1.de"&gt;value 1 german&lt;/property&gt;
        &lt;property key="key2.en"&gt;value 2 english&lt;/property&gt;
        &lt;property key="key2.de"&gt;value 2 german&lt;/property&gt;
    &lt;/user&gt;
&lt;/localizedText&gt;</pre>
                <p>The "user" section type MUST declare an "id" attribute holding the id of the user the section is valid for.</p>
                <p>A localized text file MUST NOT contain more than one user section with the same "id" attribute.</p>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot>Example XML Configuration File</MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody>
                <p>Example of a valid xml localized text file. Property key must be valid keys. (See Unblu Server i18n Configuration for real-life files.)</p><pre class="prettyprint">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;localizedText&gt;
    &lt;global&gt;
        &lt;property key="key1.en"&gt;value 1 english&lt;/property&gt;
        &lt;property key="key1.de"&gt;value 1 german&lt;/property&gt;
        &lt;property key="key2.en"&gt;value 2 english&lt;/property&gt;
        &lt;property key="key2.de"&gt;value 2 german&lt;/property&gt;
    &lt;/global&gt;
     
    &lt;domain origin="http://www.unblu.com"&gt;
        &lt;property key="key1.en"&gt;value 1 english&lt;/property&gt;
        &lt;property key="key1.de"&gt;value 1 german&lt;/property&gt;
        &lt;property key="key2.en"&gt;value 2 english&lt;/property&gt;
        &lt;property key="key2.de"&gt;value 2 german&lt;/property&gt;
    &lt;/domain&gt;
     
    &lt;domain origin="http://www.unblu.com"&gt;
        &lt;property key="key1.en"&gt;value 1 english&lt;/property&gt;
        &lt;property key="key1.de"&gt;value 1 german&lt;/property&gt;
        &lt;property key="key2.en"&gt;value 2 english&lt;/property&gt;
        &lt;property key="key2.de"&gt;value 2 german&lt;/property&gt;
    &lt;/domain&gt;
     
     
    &lt;user id="12345"&gt;
        &lt;property key="key1.en"&gt;value 1 english&lt;/property&gt;
        &lt;property key="key1.de"&gt;value 1 german&lt;/property&gt;
        &lt;property key="key2.en"&gt;value 2 english&lt;/property&gt;
        &lt;property key="key2.de"&gt;value 2 german&lt;/property&gt;
    &lt;/user&gt;
     
    &lt;user id="abcde"&gt;
        &lt;property key="key1.en"&gt;value 1 english&lt;/property&gt;
        &lt;property key="key1.de"&gt;value 1 german&lt;/property&gt;
        &lt;property key="key2.en"&gt;value 2 english&lt;/property&gt;
        &lt;property key="key2.de"&gt;value 2 german&lt;/property&gt;  
    &lt;/user&gt;  
&lt;/localizedText&gt;</pre>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <p>&#160;</p>
    </body>
</html>